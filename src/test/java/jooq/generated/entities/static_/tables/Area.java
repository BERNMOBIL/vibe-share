/*
 * This file is generated by jOOQ.
*/
package jooq.generated.entities.static_.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import jooq.generated.entities.static_.Keys;
import jooq.generated.entities.static_.Public;
import jooq.generated.entities.static_.tables.records.AreaRecord;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Area extends TableImpl<AreaRecord> {

    private static final long serialVersionUID = 264380808;

    /**
     * The reference instance of <code>public.area</code>
     */
    public static final Area AREA = new Area();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AreaRecord> getRecordType() {
        return AreaRecord.class;
    }

    /**
     * The column <code>public.area.id</code>.
     */
    public final TableField<AreaRecord, UUID> ID = createField("id", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.area.name</code>.
     */
    public final TableField<AreaRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.area.update</code>.
     */
    public final TableField<AreaRecord, Timestamp> UPDATE = createField("update", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>public.area</code> table reference
     */
    public Area() {
        this("area", null);
    }

    /**
     * Create an aliased <code>public.area</code> table reference
     */
    public Area(String alias) {
        this(alias, AREA);
    }

    private Area(String alias, Table<AreaRecord> aliased) {
        this(alias, aliased, null);
    }

    private Area(String alias, Table<AreaRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AreaRecord> getPrimaryKey() {
        return Keys.AREA_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AreaRecord>> getKeys() {
        return Arrays.<UniqueKey<AreaRecord>>asList(Keys.AREA_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Area as(String alias) {
        return new Area(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Area rename(String name) {
        return new Area(name, null);
    }
}
