/*
 * This file is generated by jOOQ.
*/
package jooq.generated.entities.static_.tables.records;


import java.sql.Time;
import java.sql.Timestamp;
import java.util.UUID;

import javax.annotation.Generated;

import jooq.generated.entities.static_.tables.Schedule;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ScheduleRecord extends UpdatableRecordImpl<ScheduleRecord> implements Record7<UUID, String, Time, Time, UUID, UUID, Timestamp> {

    private static final long serialVersionUID = -199503847;

    /**
     * Setter for <code>public.schedule.id</code>.
     */
    public ScheduleRecord setId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.schedule.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.schedule.platform</code>.
     */
    public ScheduleRecord setPlatform(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.schedule.platform</code>.
     */
    public String getPlatform() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.schedule.planned_arrival</code>.
     */
    public ScheduleRecord setPlannedArrival(Time value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.schedule.planned_arrival</code>.
     */
    public Time getPlannedArrival() {
        return (Time) get(2);
    }

    /**
     * Setter for <code>public.schedule.planned_departure</code>.
     */
    public ScheduleRecord setPlannedDeparture(Time value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.schedule.planned_departure</code>.
     */
    public Time getPlannedDeparture() {
        return (Time) get(3);
    }

    /**
     * Setter for <code>public.schedule.stop</code>.
     */
    public ScheduleRecord setStop(UUID value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.schedule.stop</code>.
     */
    public UUID getStop() {
        return (UUID) get(4);
    }

    /**
     * Setter for <code>public.schedule.journey</code>.
     */
    public ScheduleRecord setJourney(UUID value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.schedule.journey</code>.
     */
    public UUID getJourney() {
        return (UUID) get(5);
    }

    /**
     * Setter for <code>public.schedule.update</code>.
     */
    public ScheduleRecord setUpdate(Timestamp value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.schedule.update</code>.
     */
    public Timestamp getUpdate() {
        return (Timestamp) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<UUID, String, Time, Time, UUID, UUID, Timestamp> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<UUID, String, Time, Time, UUID, UUID, Timestamp> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UUID> field1() {
        return Schedule.SCHEDULE.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Schedule.SCHEDULE.PLATFORM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Time> field3() {
        return Schedule.SCHEDULE.PLANNED_ARRIVAL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Time> field4() {
        return Schedule.SCHEDULE.PLANNED_DEPARTURE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UUID> field5() {
        return Schedule.SCHEDULE.STOP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UUID> field6() {
        return Schedule.SCHEDULE.JOURNEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field7() {
        return Schedule.SCHEDULE.UPDATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UUID value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getPlatform();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Time value3() {
        return getPlannedArrival();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Time value4() {
        return getPlannedDeparture();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UUID value5() {
        return getStop();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UUID value6() {
        return getJourney();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value7() {
        return getUpdate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ScheduleRecord value1(UUID value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ScheduleRecord value2(String value) {
        setPlatform(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ScheduleRecord value3(Time value) {
        setPlannedArrival(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ScheduleRecord value4(Time value) {
        setPlannedDeparture(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ScheduleRecord value5(UUID value) {
        setStop(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ScheduleRecord value6(UUID value) {
        setJourney(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ScheduleRecord value7(Timestamp value) {
        setUpdate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ScheduleRecord values(UUID value1, String value2, Time value3, Time value4, UUID value5, UUID value6, Timestamp value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ScheduleRecord
     */
    public ScheduleRecord() {
        super(Schedule.SCHEDULE);
    }

    /**
     * Create a detached, initialised ScheduleRecord
     */
    public ScheduleRecord(UUID id, String platform, Time plannedArrival, Time plannedDeparture, UUID stop, UUID journey, Timestamp update) {
        super(Schedule.SCHEDULE);

        set(0, id);
        set(1, platform);
        set(2, plannedArrival);
        set(3, plannedDeparture);
        set(4, stop);
        set(5, journey);
        set(6, update);
    }
}
