/*
 * This file is generated by jOOQ.
*/
package jooq.generated.entities.static_.tables;


import java.sql.Date;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import jooq.generated.entities.static_.Keys;
import jooq.generated.entities.static_.Public;
import jooq.generated.entities.static_.tables.records.CalendarDateRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CalendarDate extends TableImpl<CalendarDateRecord> {

    private static final long serialVersionUID = 1945496486;

    /**
     * The reference instance of <code>public.calendar_date</code>
     */
    public static final CalendarDate CALENDAR_DATE = new CalendarDate();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CalendarDateRecord> getRecordType() {
        return CalendarDateRecord.class;
    }

    /**
     * The column <code>public.calendar_date.id</code>.
     */
    public final TableField<CalendarDateRecord, UUID> ID = createField("id", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.calendar_date.days</code>.
     */
    public final TableField<CalendarDateRecord, String> DAYS = createField("days", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.calendar_date.valid_from</code>.
     */
    public final TableField<CalendarDateRecord, Date> VALID_FROM = createField("valid_from", org.jooq.impl.SQLDataType.DATE, this, "");

    /**
     * The column <code>public.calendar_date.valid_until</code>.
     */
    public final TableField<CalendarDateRecord, Date> VALID_UNTIL = createField("valid_until", org.jooq.impl.SQLDataType.DATE, this, "");

    /**
     * The column <code>public.calendar_date.journey</code>.
     */
    public final TableField<CalendarDateRecord, UUID> JOURNEY = createField("journey", org.jooq.impl.SQLDataType.UUID, this, "");

    /**
     * The column <code>public.calendar_date.update</code>.
     */
    public final TableField<CalendarDateRecord, Timestamp> UPDATE = createField("update", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>public.calendar_date</code> table reference
     */
    public CalendarDate() {
        this("calendar_date", null);
    }

    /**
     * Create an aliased <code>public.calendar_date</code> table reference
     */
    public CalendarDate(String alias) {
        this(alias, CALENDAR_DATE);
    }

    private CalendarDate(String alias, Table<CalendarDateRecord> aliased) {
        this(alias, aliased, null);
    }

    private CalendarDate(String alias, Table<CalendarDateRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CalendarDateRecord> getPrimaryKey() {
        return Keys.CALENDAR_DATE_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CalendarDateRecord>> getKeys() {
        return Arrays.<UniqueKey<CalendarDateRecord>>asList(Keys.CALENDAR_DATE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<CalendarDateRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<CalendarDateRecord, ?>>asList(Keys.CALENDAR_DATE__CALENDAR_DATE_JOURNEY_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CalendarDate as(String alias) {
        return new CalendarDate(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CalendarDate rename(String name) {
        return new CalendarDate(name, null);
    }
}
