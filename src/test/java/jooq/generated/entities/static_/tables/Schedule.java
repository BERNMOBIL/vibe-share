/*
 * This file is generated by jOOQ.
*/
package jooq.generated.entities.static_.tables;


import java.sql.Time;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import jooq.generated.entities.static_.Keys;
import jooq.generated.entities.static_.Public;
import jooq.generated.entities.static_.tables.records.ScheduleRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Schedule extends TableImpl<ScheduleRecord> {

    private static final long serialVersionUID = -442380301;

    /**
     * The reference instance of <code>public.schedule</code>
     */
    public static final Schedule SCHEDULE = new Schedule();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ScheduleRecord> getRecordType() {
        return ScheduleRecord.class;
    }

    /**
     * The column <code>public.schedule.id</code>.
     */
    public final TableField<ScheduleRecord, UUID> ID = createField("id", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.schedule.platform</code>.
     */
    public final TableField<ScheduleRecord, String> PLATFORM = createField("platform", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.schedule.planned_arrival</code>.
     */
    public final TableField<ScheduleRecord, Time> PLANNED_ARRIVAL = createField("planned_arrival", org.jooq.impl.SQLDataType.TIME, this, "");

    /**
     * The column <code>public.schedule.planned_departure</code>.
     */
    public final TableField<ScheduleRecord, Time> PLANNED_DEPARTURE = createField("planned_departure", org.jooq.impl.SQLDataType.TIME, this, "");

    /**
     * The column <code>public.schedule.stop</code>.
     */
    public final TableField<ScheduleRecord, UUID> STOP = createField("stop", org.jooq.impl.SQLDataType.UUID, this, "");

    /**
     * The column <code>public.schedule.journey</code>.
     */
    public final TableField<ScheduleRecord, UUID> JOURNEY = createField("journey", org.jooq.impl.SQLDataType.UUID, this, "");

    /**
     * The column <code>public.schedule.update</code>.
     */
    public final TableField<ScheduleRecord, Timestamp> UPDATE = createField("update", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>public.schedule</code> table reference
     */
    public Schedule() {
        this("schedule", null);
    }

    /**
     * Create an aliased <code>public.schedule</code> table reference
     */
    public Schedule(String alias) {
        this(alias, SCHEDULE);
    }

    private Schedule(String alias, Table<ScheduleRecord> aliased) {
        this(alias, aliased, null);
    }

    private Schedule(String alias, Table<ScheduleRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ScheduleRecord> getPrimaryKey() {
        return Keys.SCHEDULE_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ScheduleRecord>> getKeys() {
        return Arrays.<UniqueKey<ScheduleRecord>>asList(Keys.SCHEDULE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ScheduleRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ScheduleRecord, ?>>asList(Keys.SCHEDULE__SCHEDULE_STOP_FKEY, Keys.SCHEDULE__SCHEDULE_JOURNEY_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schedule as(String alias) {
        return new Schedule(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Schedule rename(String name) {
        return new Schedule(name, null);
    }
}
