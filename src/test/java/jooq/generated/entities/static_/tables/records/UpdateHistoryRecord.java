/*
 * This file is generated by jOOQ.
*/
package jooq.generated.entities.static_.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;

import jooq.generated.entities.static_.tables.UpdateHistory;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UpdateHistoryRecord extends UpdatableRecordImpl<UpdateHistoryRecord> implements Record2<Timestamp, String> {

    private static final long serialVersionUID = 612753110;

    /**
     * Setter for <code>public.update_history.time</code>.
     */
    public UpdateHistoryRecord setTime(Timestamp value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.update_history.time</code>.
     */
    public Timestamp getTime() {
        return (Timestamp) get(0);
    }

    /**
     * Setter for <code>public.update_history.status</code>.
     */
    public UpdateHistoryRecord setStatus(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.update_history.status</code>.
     */
    public String getStatus() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Timestamp> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Timestamp, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Timestamp, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field1() {
        return UpdateHistory.UPDATE_HISTORY.TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return UpdateHistory.UPDATE_HISTORY.STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value1() {
        return getTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UpdateHistoryRecord value1(Timestamp value) {
        setTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UpdateHistoryRecord value2(String value) {
        setStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UpdateHistoryRecord values(Timestamp value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UpdateHistoryRecord
     */
    public UpdateHistoryRecord() {
        super(UpdateHistory.UPDATE_HISTORY);
    }

    /**
     * Create a detached, initialised UpdateHistoryRecord
     */
    public UpdateHistoryRecord(Timestamp time, String status) {
        super(UpdateHistory.UPDATE_HISTORY);

        set(0, time);
        set(1, status);
    }
}
