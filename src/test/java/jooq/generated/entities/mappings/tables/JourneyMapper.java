/*
 * This file is generated by jOOQ.
*/
package jooq.generated.entities.mappings.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import jooq.generated.entities.mappings.Keys;
import jooq.generated.entities.mappings.Public;
import jooq.generated.entities.mappings.tables.records.JourneyMapperRecord;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JourneyMapper extends TableImpl<JourneyMapperRecord> {

    private static final long serialVersionUID = -388246309;

    /**
     * The reference instance of <code>public.journey_mapper</code>
     */
    public static final JourneyMapper JOURNEY_MAPPER = new JourneyMapper();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<JourneyMapperRecord> getRecordType() {
        return JourneyMapperRecord.class;
    }

    /**
     * The column <code>public.journey_mapper.gtfs_trip_id</code>.
     */
    public final TableField<JourneyMapperRecord, String> GTFS_TRIP_ID = createField("gtfs_trip_id", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.journey_mapper.gtfs_service_id</code>.
     */
    public final TableField<JourneyMapperRecord, String> GTFS_SERVICE_ID = createField("gtfs_service_id", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.journey_mapper.id</code>.
     */
    public final TableField<JourneyMapperRecord, UUID> ID = createField("id", org.jooq.impl.SQLDataType.UUID, this, "");

    /**
     * The column <code>public.journey_mapper.update</code>.
     */
    public final TableField<JourneyMapperRecord, Timestamp> UPDATE = createField("update", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>public.journey_mapper</code> table reference
     */
    public JourneyMapper() {
        this("journey_mapper", null);
    }

    /**
     * Create an aliased <code>public.journey_mapper</code> table reference
     */
    public JourneyMapper(String alias) {
        this(alias, JOURNEY_MAPPER);
    }

    private JourneyMapper(String alias, Table<JourneyMapperRecord> aliased) {
        this(alias, aliased, null);
    }

    private JourneyMapper(String alias, Table<JourneyMapperRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<JourneyMapperRecord>> getKeys() {
        return Arrays.<UniqueKey<JourneyMapperRecord>>asList(Keys.JOURNEY_MAPPER_GTFS_TRIP_ID_GTFS_SERVICE_ID_UPDATE_KEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JourneyMapper as(String alias) {
        return new JourneyMapper(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public JourneyMapper rename(String name) {
        return new JourneyMapper(name, null);
    }
}
